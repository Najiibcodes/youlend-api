# # Build stage
# FROM node:18-alpine as build
# WORKDIR /app

# # Copy package.json and package-lock.json
# COPY package*.json ./

# RUN npm ci

# COPY . .

# # Update the environment.prod.ts file to use the correct API URL in production
# RUN sed -i 's|/api|http://localhost:5000/api|g' src/environments/environment.prod.ts || echo "No environment.prod.ts file found"

# # Build the application
# RUN npm run build -- --configuration production

# # Production stage
# FROM nginx:alpine
# COPY --from=build /app/dist/loan-website /usr/share/nginx/html

# # Copy nginx configuration
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# EXPOSE 80

# CMD ["nginx", "-g", "daemon off;"]

####

# Build stage
FROM node:18-alpine as build
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the application code
COPY . .

# Fix potential issues with environment files
RUN mkdir -p src/environments
RUN echo "export const environment = { production: false, apiUrl: '/api' };" > src/environments/environment.ts
RUN echo "export const environment = { production: true, apiUrl: '/api' };" > src/environments/environment.prod.ts

# Build the application with production configuration
RUN npm run build -- --configuration=production

# Production stage
FROM nginx:alpine
# Copy the built app to nginx's serve directory
COPY --from=build /app/dist/loan-website /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]